name: Automatic contract compile & deploy workflow

on:
  workflow_dispatch:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  validate-project-structure-job:
    name: Validate project structure
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      project_path: ${{ steps.validate.outputs.project_path }}
      project_name: ${{ steps.validate.outputs.project_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: technote-space/get-diff-action@v6
        with:
          SET_ENV_NAME_COUNT: diff_count
          PATTERNS: |
            projects/source-code/cosmwasm/**
      - name: check number of project
        id: validate
        run: |
          IFS=' ' read -r -a diff_files <<< "${{ env.GIT_DIFF }}"
          tail="${diff_files[0]#*/*/*/*/}"
          head="${diff_files[0]%$tail}"
          project_path="${head:1}"
          if [[ $project_path != projects/source-code/cosmwasm/* ]]
          then
            echo "Cosmwasm Project must be registered in projects/source-code/cosmwasm/"
            exit 1
          fi
          for i in ${{ env.GIT_DIFF }}
          do
            if [[ $i != $project_path* ]]
            then
              echo "Only one project can be registered!"
              exit 1
            fi
          done
          diff_project_name="${project_path#*/*/*/}"
          project_name="${diff_project_name%?}"
          echo "project_name=$project_name" >> $GITHUB_OUTPUT
          echo "project_path=$project_path" >> $GITHUB_OUTPUT

  compile-cosmwasm-job:
    name: Compile cosmwasm contract
    needs: validate-project-structure-job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: cargo build
        id: wasm_compile
        working-directory: ${{ needs.validate-project-structure-job.outputs.project_path }}
        run: |
          rustup target add wasm32-unknown-unknown
          cargo build --release --target wasm32-unknown-unknown
          echo "wasm_path=target/wasm32-unknown-unknown/release/${{ needs.validate-project-structure-job.outputs.project_name }}.wasm" >> $GITHUB_OUTPUT
          cd target/wasm32-unknown-unknown/release && ls && pwd
      - uses: actions/upload-artifact@v3
        name: wasm upload
        id: wasm_upload
        with:
          name: ${{ needs.validate-project-structure-job.outputs.project_name }}
          path: ${{ needs.validate-project-structure-job.outputs.project_path }}${{ steps.wasm_compile.outputs.wasm_path }}
      
  store-wasm-job:
    name: Store wasm to xpla chain
    needs: [validate-project-structure-job, compile-cosmwasm-job]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.validate-project-structure-job.outputs.project_name }}
          path: ts-test
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
      - name: store tx broadcasting
        working-directory: ts-test
        run: |
          npm ci
          npm run ts -- ${{ needs.validate-project-structure-job.outputs.project_name }} "${{secrets.TEST_MNEMONIC}}"
